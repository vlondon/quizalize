extends ./layout

block body
    
    -function prettyDate(dateString){
        //if it's already a date object and not a string you don't need this line:
        -if (dateString=="" || dateString=="0") return "";
        -var date = new Date(dateString);
        -var d = date.getDate();
        -var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
        -var m = monthNames[date.getMonth()];
        -var y = date.getFullYear();
        -var result = d+' '+m+' '+y;
        -if(result=="1 Jan 1970") return "";
        -return result;
    -}
    
    script.   
        var subjects, categories, pending;
        $.post("/admin/queryDb",
        {
            dbname: "contentcategory",
            dbquery: "{}"
        },
        function(data, status){
            categories = data;
            $.post("/admin/queryDb",
            {
                dbname: "subject",
                dbquery: "{}"
            },
            function(data, status){
                subjects = data;
                
                $.post("/admin/queryDb",
                {
                    dbname: "content",
                    dbquery: "{'meta.published': 'pending'}"
                },
                function(data, status){
                    quizzes = data;
                    
                    //- window.pendingPage({
                    //-     categories: categories,
                    //-     subjects: subjects,
                    //-     quizzes: quizzes
                    //- });

                    quizzes.forEach(function(quiz) {
                        var subjectId = $("#subject" + quiz.uuid)
                        subjects.forEach(function(subject){
                            subjectId.append($("<option />").val(subject.uuid).text(subject.name));
                        });                        
                    });

                    $(".categoryId").each(function() {
                        var categoryName = categoryNameFromCategoryId($(this).text());
                        //- console.log(categoryName);
                        $(this).text(categoryName);
                    });                    
                    
                });
            });
            
        });       

        function showCategories(uuid, subId, catId) {
            var subjectId = $(subId + uuid).val();
            var selectId = $(catId + uuid)
            
            selectId
                .find('option')
                .remove()
                .end();
            if (subjectId != "") {
                var availableCategories = categories.filter(function(category) {
                    return category.subjectId == subjectId;
                });

                availableCategories.forEach(function(category){
                    selectId.append($("<option />").val(category.uuid).text(category.name));
                });                
            }
        }
        var categoryNameFromCategoryId = function(categoryId){
            //- console.log(categoryId);
            var category = categories.filter(function(cat) {
                return cat.uuid == categoryId;
            });
            //- console.log(category);
            if (category[0] === undefined){
                return "No valid category";
                }
            else if (category[0].name === undefined) {
                return "No valid category";
                }    
            else{
            return category[0].name;
            }
        };
                
    
    h1 Pending Quizzes
    #react
    .container-fluid
        .row
            table(border="1", style="background-color:white;font-size:12px; width:100%")#pendingTable
                thead
                    th Type
                    th Name
                    th Number of questions
                    th Category
                    th preview
                    th Editor
                    th Updated
                    th Set Category And Approve
                tbody
                    -pending.sort(function(x, y){
                        -if (!x.updated) {
                            -return -1;
                        -}
                        -if (!y.updated) {
                            -return 1;
                        -}
                        -return y.updated - x.updated;
                    -});
    
                for quiz in pending
                    -var questionLength = undefined;
                    -if (quiz.type == "quiz"){
                        -console.log("in quiz");
                        -var quizPayload = JSON.parse(quiz.payload);
                        -if (quizPayload.questions !== undefined){
                        -console.log("in");
                            -questionLength = quizPayload.questions.length;
                            -console.log("questionLength", questionLength);
                        -}
                    -}
                    
                    tr
                        td #{quiz.type}
                        td #{quiz.meta.name}
                        td #{questionLength}
                        td.categoryId #{quiz.meta.categoryId}
                        td
                            a(href="https://www.quizalize.com/app#/play/public/#{quiz.uuid}") Preview
                        td            
                            if quiz.type == "quiz"
                                a(href="https://www.quizalize.com/quiz/create/#{quiz.uuid}") Editor    
                            else            
                                a(href="https://www.quizalize.com/quiz/app/#{quiz.uuid}") Editor    
                        td #{prettyDate(quiz.updated)} 
                        td
                            form(method="POST", action="/admin/approve/#{quiz.type}/#{quiz.uuid}")
                                select(name="subjectId", onchange="showCategories('#{quiz.uuid}', '#subject', '#category')", id="subject#{quiz.uuid}")
                                    option(value="") Please Select
                                select(name="publicCategoryId", id="category#{quiz.uuid}")
                                input(type="submit" value="Approve")
                                    
                        //- td
                        //-     form(method="POST", action="/admin/approvefirst/#{quiz.type}/#{quiz.uuid}")
                        //-         select(name="subjectId", onchange="showCategories('#{quiz.uuid}', '#subjectnew', '#categorynew')", id="subjectnew#{quiz.uuid}")
                        //-             option 
                        //-             for subject in subjects
                        //-                 option(value=subject.uuid) #{subject.name}
                        //-         select(name="publicCategoryId", id="categorynew#{quiz.uuid}")
                        //-         input(type="submit" value="Approve First")
                        //-         
    script(src="/js/admin.js")
